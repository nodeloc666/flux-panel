name: Build and Push Docker Images to GitHub

on:
  push:
    branches:
      - main
    paths:
      - 'vue-frontend/**'
      - 'vite-frontend/**'
      - 'springboot-backend/**'
      - 'go-gost/**'
      - '.github/workflows/docker-build.yml'

jobs:
  build-gost:
    if: contains(github.event.head_commit.message, '[skip gost]') == false
    name: Build & Push GOST Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3

      - name: Check for GOST changes
        uses: dorny/paths-filter@v2
        id: gost-changes
        with:
          filters: |
            gost:
              - 'go-gost/**'

      - name: Set up Go
        if: steps.gost-changes.outputs.gost == 'true'
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Cache Go modules
        if: steps.gost-changes.outputs.gost == 'true'
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Set up Docker Buildx
        if: steps.gost-changes.outputs.gost == 'true'
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        if: steps.gost-changes.outputs.gost == 'true'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        if: steps.gost-changes.outputs.gost == 'true'
        id: meta-gost
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository_owner }}/gost
          tags: |
            type=raw,value=latest
            type=sha,format=long

      - name: Build and push GOST image
        if: steps.gost-changes.outputs.gost == 'true'
        uses: docker/build-push-action@v4
        with:
          context: ./go-gost
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta-gost.outputs.tags }}
          labels: ${{ steps.meta-gost.outputs.labels }}

  build-vite:
    if: contains(github.event.head_commit.message, '[skip vite]') == false
    name: Build & Push Vite Frontend
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3

      - name: Check for Vite changes
        uses: dorny/paths-filter@v2
        id: vite-changes
        with:
          filters: |
            vite:
              - 'vite-frontend/**'

      - name: Set up Docker Buildx
        if: steps.vite-changes.outputs.vite == 'true'
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        if: steps.vite-changes.outputs.vite == 'true'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        if: steps.vite-changes.outputs.vite == 'true'
        id: meta-vite
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository_owner }}/vite-frontend
          tags: |
            type=raw,value=latest
            type=sha,format=long

      - name: Build and push Vite image
        if: steps.vite-changes.outputs.vite == 'true'
        uses: docker/build-push-action@v4
        with:
          context: ./vite-frontend
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta-vite.outputs.tags }}
          labels: ${{ steps.meta-vite.outputs.labels }}

  build-java:
    if: contains(github.event.head_commit.message, '[skip java]') == false
    name: Build & Push Spring Boot Backend
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3

      - name: Check for Java changes
        uses: dorny/paths-filter@v2
        id: java-changes
        with:
          filters: |
            java:
              - 'springboot-backend/**'

      - name: Set up JDK and Maven
        if: steps.java-changes.outputs.java == 'true'
        uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: 'temurin'

      - name: Cache Maven dependencies
        if: steps.java-changes.outputs.java == 'true'
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build Java JAR
        if: steps.java-changes.outputs.java == 'true'
        working-directory: ./springboot-backend
        run: mvn clean package -DskipTests

      - name: Set up Docker Buildx
        if: steps.java-changes.outputs.java == 'true'
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        if: steps.java-changes.outputs.java == 'true'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        if: steps.java-changes.outputs.java == 'true'
        id: meta-java
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository_owner }}/springboot-backend
          tags: |
            type=raw,value=latest
            type=sha,format=long

      - name: Build and push Java image
        if: steps.java-changes.outputs.java == 'true'
        uses: docker/build-push-action@v4
        with:
          context: ./springboot-backend
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta-java.outputs.tags }}
          labels: ${{ steps.meta-java.outputs.labels }}
